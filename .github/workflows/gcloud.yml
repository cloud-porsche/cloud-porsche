name: Google Cloud
on:
  push:
    branches:
      - master
      - develop
jobs:
  build-and-push-to-gcr:
    strategy:
      fail-fast: true
      matrix:
        image:
          - property-management
          - parking-management
          - monitoring-management
    name: Build and Push image to GCR ðŸ“¦
    runs-on: ubuntu-22.04
    permissions:
      id-token: 'write'
      contents: 'read'
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'cloud-porsche'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker europe-west4-docker.pkg.dev --quiet
      - name: Build the Docker image
        run: |
          export IMAGE_URL=europe-west4-docker.pkg.dev/cloud-porsche/cloud-porsche/${{ matrix.image }}
          docker build -t $IMAGE_URL:${{ github.ref_name == 'master' && 'stable' || 'latest' }} \
                       -t $IMAGE_URL:${{ github.sha }} \
                       -f ./cloud-dev-${{ matrix.image }}/Dockerfile .
          docker push $IMAGE_URL:${{ github.sha }}
          docker push $IMAGE_URL:${{ github.ref_name == 'master' && 'stable' || 'latest' }}

  build-and-push-helm:
    name: Build and Push helm tarball to GCR ðŸ“¦
    runs-on: ubuntu-22.04
    permissions:
      id-token: 'write'
      contents: 'read'
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: 'cloud-porsche'
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      - name: Configure Docker to use the gcloud command-line tool as a credential helper
        run: gcloud auth configure-docker europe-west4-docker.pkg.dev --quiet
      - name: Package helm tarball
        run: |
          echo HELM_TARBALL=$(helm package ./helm/cloud-porsche-default | grep -oP '(?<=Successfully packaged chart and saved it to: ).*') >> $GITHUB_ENV
      - name: Push helm tarball to GCR
        run: |
          helm push ${{ env.HELM_TARBALL }} oci://europe-west4-docker.pkg.dev/cloud-porsche/cloud-porsche/
